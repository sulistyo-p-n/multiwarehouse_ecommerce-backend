/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.multiwarehouse.app.kafka.product.avro.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ProductChangeAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8621322862122976681L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProductChangeAvroModel\",\"namespace\":\"com.multiwarehouse.app.kafka.product.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"productId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"categoryId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"code\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"price\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}},{\"name\":\"active\",\"type\":\"boolean\"},{\"name\":\"actionType\",\"type\":{\"type\":\"enum\",\"name\":\"ActionType\",\"symbols\":[\"DEFAULT\",\"CREATED\",\"UPDATED\",\"SOFT_DELETED\",\"HARD_DELETED\"]}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<ProductChangeAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProductChangeAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ProductChangeAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ProductChangeAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ProductChangeAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ProductChangeAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ProductChangeAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ProductChangeAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ProductChangeAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.util.UUID id;
  private java.util.UUID productId;
  private java.util.UUID categoryId;
  private java.lang.String code;
  private java.lang.String name;
  private java.math.BigDecimal price;
  private boolean active;
  private com.multiwarehouse.app.kafka.product.avro.model.ActionType actionType;
  private java.time.Instant createdAt;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProductChangeAvroModel() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param productId The new value for productId
   * @param categoryId The new value for categoryId
   * @param code The new value for code
   * @param name The new value for name
   * @param price The new value for price
   * @param active The new value for active
   * @param actionType The new value for actionType
   * @param createdAt The new value for createdAt
   */
  public ProductChangeAvroModel(java.util.UUID id, java.util.UUID productId, java.util.UUID categoryId, java.lang.String code, java.lang.String name, java.math.BigDecimal price, java.lang.Boolean active, com.multiwarehouse.app.kafka.product.avro.model.ActionType actionType, java.time.Instant createdAt) {
    this.id = id;
    this.productId = productId;
    this.categoryId = categoryId;
    this.code = code;
    this.name = name;
    this.price = price;
    this.active = active;
    this.actionType = actionType;
    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return productId;
    case 2: return categoryId;
    case 3: return code;
    case 4: return name;
    case 5: return price;
    case 6: return active;
    case 7: return actionType;
    case 8: return createdAt;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.Conversions.UUIDConversion(),
      new org.apache.avro.Conversions.UUIDConversion(),
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      null,
      new org.apache.avro.Conversions.DecimalConversion(),
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.util.UUID)value$; break;
    case 1: productId = (java.util.UUID)value$; break;
    case 2: categoryId = (java.util.UUID)value$; break;
    case 3: code = value$ != null ? value$.toString() : null; break;
    case 4: name = value$ != null ? value$.toString() : null; break;
    case 5: price = (java.math.BigDecimal)value$; break;
    case 6: active = (java.lang.Boolean)value$; break;
    case 7: actionType = (com.multiwarehouse.app.kafka.product.avro.model.ActionType)value$; break;
    case 8: createdAt = (java.time.Instant)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.util.UUID getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.util.UUID value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'productId' field.
   * @return The value of the 'productId' field.
   */
  public java.util.UUID getProductId() {
    return productId;
  }


  /**
   * Sets the value of the 'productId' field.
   * @param value the value to set.
   */
  public void setProductId(java.util.UUID value) {
    this.productId = value;
  }

  /**
   * Gets the value of the 'categoryId' field.
   * @return The value of the 'categoryId' field.
   */
  public java.util.UUID getCategoryId() {
    return categoryId;
  }


  /**
   * Sets the value of the 'categoryId' field.
   * @param value the value to set.
   */
  public void setCategoryId(java.util.UUID value) {
    this.categoryId = value;
  }

  /**
   * Gets the value of the 'code' field.
   * @return The value of the 'code' field.
   */
  public java.lang.String getCode() {
    return code;
  }


  /**
   * Sets the value of the 'code' field.
   * @param value the value to set.
   */
  public void setCode(java.lang.String value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return The value of the 'price' field.
   */
  public java.math.BigDecimal getPrice() {
    return price;
  }


  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(java.math.BigDecimal value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'active' field.
   * @return The value of the 'active' field.
   */
  public boolean getActive() {
    return active;
  }


  /**
   * Sets the value of the 'active' field.
   * @param value the value to set.
   */
  public void setActive(boolean value) {
    this.active = value;
  }

  /**
   * Gets the value of the 'actionType' field.
   * @return The value of the 'actionType' field.
   */
  public com.multiwarehouse.app.kafka.product.avro.model.ActionType getActionType() {
    return actionType;
  }


  /**
   * Sets the value of the 'actionType' field.
   * @param value the value to set.
   */
  public void setActionType(com.multiwarehouse.app.kafka.product.avro.model.ActionType value) {
    this.actionType = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.time.Instant getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.time.Instant value) {
    this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Creates a new ProductChangeAvroModel RecordBuilder.
   * @return A new ProductChangeAvroModel RecordBuilder
   */
  public static com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder newBuilder() {
    return new com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder();
  }

  /**
   * Creates a new ProductChangeAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProductChangeAvroModel RecordBuilder
   */
  public static com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder newBuilder(com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder other) {
    if (other == null) {
      return new com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder();
    } else {
      return new com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new ProductChangeAvroModel RecordBuilder by copying an existing ProductChangeAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new ProductChangeAvroModel RecordBuilder
   */
  public static com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder newBuilder(com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel other) {
    if (other == null) {
      return new com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder();
    } else {
      return new com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for ProductChangeAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProductChangeAvroModel>
    implements org.apache.avro.data.RecordBuilder<ProductChangeAvroModel> {

    private java.util.UUID id;
    private java.util.UUID productId;
    private java.util.UUID categoryId;
    private java.lang.String code;
    private java.lang.String name;
    private java.math.BigDecimal price;
    private boolean active;
    private com.multiwarehouse.app.kafka.product.avro.model.ActionType actionType;
    private java.time.Instant createdAt;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.productId)) {
        this.productId = data().deepCopy(fields()[1].schema(), other.productId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.categoryId)) {
        this.categoryId = data().deepCopy(fields()[2].schema(), other.categoryId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.code)) {
        this.code = data().deepCopy(fields()[3].schema(), other.code);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.name)) {
        this.name = data().deepCopy(fields()[4].schema(), other.name);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.price)) {
        this.price = data().deepCopy(fields()[5].schema(), other.price);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.active)) {
        this.active = data().deepCopy(fields()[6].schema(), other.active);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.actionType)) {
        this.actionType = data().deepCopy(fields()[7].schema(), other.actionType);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[8].schema(), other.createdAt);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing ProductChangeAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.productId)) {
        this.productId = data().deepCopy(fields()[1].schema(), other.productId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.categoryId)) {
        this.categoryId = data().deepCopy(fields()[2].schema(), other.categoryId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.code)) {
        this.code = data().deepCopy(fields()[3].schema(), other.code);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.name)) {
        this.name = data().deepCopy(fields()[4].schema(), other.name);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.price)) {
        this.price = data().deepCopy(fields()[5].schema(), other.price);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.active)) {
        this.active = data().deepCopy(fields()[6].schema(), other.active);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.actionType)) {
        this.actionType = data().deepCopy(fields()[7].schema(), other.actionType);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[8].schema(), other.createdAt);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.util.UUID getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder setId(java.util.UUID value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'productId' field.
      * @return The value.
      */
    public java.util.UUID getProductId() {
      return productId;
    }


    /**
      * Sets the value of the 'productId' field.
      * @param value The value of 'productId'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder setProductId(java.util.UUID value) {
      validate(fields()[1], value);
      this.productId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'productId' field has been set.
      * @return True if the 'productId' field has been set, false otherwise.
      */
    public boolean hasProductId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'productId' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder clearProductId() {
      productId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'categoryId' field.
      * @return The value.
      */
    public java.util.UUID getCategoryId() {
      return categoryId;
    }


    /**
      * Sets the value of the 'categoryId' field.
      * @param value The value of 'categoryId'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder setCategoryId(java.util.UUID value) {
      validate(fields()[2], value);
      this.categoryId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'categoryId' field has been set.
      * @return True if the 'categoryId' field has been set, false otherwise.
      */
    public boolean hasCategoryId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'categoryId' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder clearCategoryId() {
      categoryId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'code' field.
      * @return The value.
      */
    public java.lang.String getCode() {
      return code;
    }


    /**
      * Sets the value of the 'code' field.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder setCode(java.lang.String value) {
      validate(fields()[3], value);
      this.code = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'code' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder clearCode() {
      code = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder setName(java.lang.String value) {
      validate(fields()[4], value);
      this.name = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder clearName() {
      name = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * @return The value.
      */
    public java.math.BigDecimal getPrice() {
      return price;
    }


    /**
      * Sets the value of the 'price' field.
      * @param value The value of 'price'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder setPrice(java.math.BigDecimal value) {
      validate(fields()[5], value);
      this.price = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'price' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder clearPrice() {
      price = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'active' field.
      * @return The value.
      */
    public boolean getActive() {
      return active;
    }


    /**
      * Sets the value of the 'active' field.
      * @param value The value of 'active'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder setActive(boolean value) {
      validate(fields()[6], value);
      this.active = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'active' field has been set.
      * @return True if the 'active' field has been set, false otherwise.
      */
    public boolean hasActive() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'active' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder clearActive() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'actionType' field.
      * @return The value.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ActionType getActionType() {
      return actionType;
    }


    /**
      * Sets the value of the 'actionType' field.
      * @param value The value of 'actionType'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder setActionType(com.multiwarehouse.app.kafka.product.avro.model.ActionType value) {
      validate(fields()[7], value);
      this.actionType = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'actionType' field has been set.
      * @return True if the 'actionType' field has been set, false otherwise.
      */
    public boolean hasActionType() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'actionType' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder clearActionType() {
      actionType = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.time.Instant getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder setCreatedAt(java.time.Instant value) {
      validate(fields()[8], value);
      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.product.avro.model.ProductChangeAvroModel.Builder clearCreatedAt() {
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProductChangeAvroModel build() {
      try {
        ProductChangeAvroModel record = new ProductChangeAvroModel();
        record.id = fieldSetFlags()[0] ? this.id : (java.util.UUID) defaultValue(fields()[0]);
        record.productId = fieldSetFlags()[1] ? this.productId : (java.util.UUID) defaultValue(fields()[1]);
        record.categoryId = fieldSetFlags()[2] ? this.categoryId : (java.util.UUID) defaultValue(fields()[2]);
        record.code = fieldSetFlags()[3] ? this.code : (java.lang.String) defaultValue(fields()[3]);
        record.name = fieldSetFlags()[4] ? this.name : (java.lang.String) defaultValue(fields()[4]);
        record.price = fieldSetFlags()[5] ? this.price : (java.math.BigDecimal) defaultValue(fields()[5]);
        record.active = fieldSetFlags()[6] ? this.active : (java.lang.Boolean) defaultValue(fields()[6]);
        record.actionType = fieldSetFlags()[7] ? this.actionType : (com.multiwarehouse.app.kafka.product.avro.model.ActionType) defaultValue(fields()[7]);
        record.createdAt = fieldSetFlags()[8] ? this.createdAt : (java.time.Instant) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProductChangeAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProductChangeAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProductChangeAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<ProductChangeAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










