/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.multiwarehouse.app.kafka.order.avro.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class WarehouseCreateAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7391195216425587179L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WarehouseCreateAvroModel\",\"namespace\":\"com.multiwarehouse.app.kafka.order.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"warehouseId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"addressStreet\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"addressCity\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"addressPostalCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
  }

  private static final BinaryMessageEncoder<WarehouseCreateAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<WarehouseCreateAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<WarehouseCreateAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<WarehouseCreateAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<WarehouseCreateAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this WarehouseCreateAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a WarehouseCreateAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a WarehouseCreateAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static WarehouseCreateAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.util.UUID id;
  private java.util.UUID warehouseId;
  private java.lang.String name;
  private java.lang.String addressStreet;
  private java.lang.String addressCity;
  private java.lang.String addressPostalCode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public WarehouseCreateAvroModel() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param warehouseId The new value for warehouseId
   * @param name The new value for name
   * @param addressStreet The new value for addressStreet
   * @param addressCity The new value for addressCity
   * @param addressPostalCode The new value for addressPostalCode
   */
  public WarehouseCreateAvroModel(java.util.UUID id, java.util.UUID warehouseId, java.lang.String name, java.lang.String addressStreet, java.lang.String addressCity, java.lang.String addressPostalCode) {
    this.id = id;
    this.warehouseId = warehouseId;
    this.name = name;
    this.addressStreet = addressStreet;
    this.addressCity = addressCity;
    this.addressPostalCode = addressPostalCode;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return warehouseId;
    case 2: return name;
    case 3: return addressStreet;
    case 4: return addressCity;
    case 5: return addressPostalCode;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.Conversions.UUIDConversion(),
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.util.UUID)value$; break;
    case 1: warehouseId = (java.util.UUID)value$; break;
    case 2: name = value$ != null ? value$.toString() : null; break;
    case 3: addressStreet = value$ != null ? value$.toString() : null; break;
    case 4: addressCity = value$ != null ? value$.toString() : null; break;
    case 5: addressPostalCode = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.util.UUID getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.util.UUID value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'warehouseId' field.
   * @return The value of the 'warehouseId' field.
   */
  public java.util.UUID getWarehouseId() {
    return warehouseId;
  }


  /**
   * Sets the value of the 'warehouseId' field.
   * @param value the value to set.
   */
  public void setWarehouseId(java.util.UUID value) {
    this.warehouseId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'addressStreet' field.
   * @return The value of the 'addressStreet' field.
   */
  public java.lang.String getAddressStreet() {
    return addressStreet;
  }


  /**
   * Sets the value of the 'addressStreet' field.
   * @param value the value to set.
   */
  public void setAddressStreet(java.lang.String value) {
    this.addressStreet = value;
  }

  /**
   * Gets the value of the 'addressCity' field.
   * @return The value of the 'addressCity' field.
   */
  public java.lang.String getAddressCity() {
    return addressCity;
  }


  /**
   * Sets the value of the 'addressCity' field.
   * @param value the value to set.
   */
  public void setAddressCity(java.lang.String value) {
    this.addressCity = value;
  }

  /**
   * Gets the value of the 'addressPostalCode' field.
   * @return The value of the 'addressPostalCode' field.
   */
  public java.lang.String getAddressPostalCode() {
    return addressPostalCode;
  }


  /**
   * Sets the value of the 'addressPostalCode' field.
   * @param value the value to set.
   */
  public void setAddressPostalCode(java.lang.String value) {
    this.addressPostalCode = value;
  }

  /**
   * Creates a new WarehouseCreateAvroModel RecordBuilder.
   * @return A new WarehouseCreateAvroModel RecordBuilder
   */
  public static com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder newBuilder() {
    return new com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder();
  }

  /**
   * Creates a new WarehouseCreateAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new WarehouseCreateAvroModel RecordBuilder
   */
  public static com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder newBuilder(com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder other) {
    if (other == null) {
      return new com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder();
    } else {
      return new com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new WarehouseCreateAvroModel RecordBuilder by copying an existing WarehouseCreateAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new WarehouseCreateAvroModel RecordBuilder
   */
  public static com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder newBuilder(com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel other) {
    if (other == null) {
      return new com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder();
    } else {
      return new com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for WarehouseCreateAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WarehouseCreateAvroModel>
    implements org.apache.avro.data.RecordBuilder<WarehouseCreateAvroModel> {

    private java.util.UUID id;
    private java.util.UUID warehouseId;
    private java.lang.String name;
    private java.lang.String addressStreet;
    private java.lang.String addressCity;
    private java.lang.String addressPostalCode;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.warehouseId)) {
        this.warehouseId = data().deepCopy(fields()[1].schema(), other.warehouseId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.addressStreet)) {
        this.addressStreet = data().deepCopy(fields()[3].schema(), other.addressStreet);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.addressCity)) {
        this.addressCity = data().deepCopy(fields()[4].schema(), other.addressCity);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.addressPostalCode)) {
        this.addressPostalCode = data().deepCopy(fields()[5].schema(), other.addressPostalCode);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing WarehouseCreateAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.warehouseId)) {
        this.warehouseId = data().deepCopy(fields()[1].schema(), other.warehouseId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.addressStreet)) {
        this.addressStreet = data().deepCopy(fields()[3].schema(), other.addressStreet);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.addressCity)) {
        this.addressCity = data().deepCopy(fields()[4].schema(), other.addressCity);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.addressPostalCode)) {
        this.addressPostalCode = data().deepCopy(fields()[5].schema(), other.addressPostalCode);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.util.UUID getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder setId(java.util.UUID value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'warehouseId' field.
      * @return The value.
      */
    public java.util.UUID getWarehouseId() {
      return warehouseId;
    }


    /**
      * Sets the value of the 'warehouseId' field.
      * @param value The value of 'warehouseId'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder setWarehouseId(java.util.UUID value) {
      validate(fields()[1], value);
      this.warehouseId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'warehouseId' field has been set.
      * @return True if the 'warehouseId' field has been set, false otherwise.
      */
    public boolean hasWarehouseId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'warehouseId' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder clearWarehouseId() {
      warehouseId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder setName(java.lang.String value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'addressStreet' field.
      * @return The value.
      */
    public java.lang.String getAddressStreet() {
      return addressStreet;
    }


    /**
      * Sets the value of the 'addressStreet' field.
      * @param value The value of 'addressStreet'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder setAddressStreet(java.lang.String value) {
      validate(fields()[3], value);
      this.addressStreet = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'addressStreet' field has been set.
      * @return True if the 'addressStreet' field has been set, false otherwise.
      */
    public boolean hasAddressStreet() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'addressStreet' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder clearAddressStreet() {
      addressStreet = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'addressCity' field.
      * @return The value.
      */
    public java.lang.String getAddressCity() {
      return addressCity;
    }


    /**
      * Sets the value of the 'addressCity' field.
      * @param value The value of 'addressCity'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder setAddressCity(java.lang.String value) {
      validate(fields()[4], value);
      this.addressCity = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'addressCity' field has been set.
      * @return True if the 'addressCity' field has been set, false otherwise.
      */
    public boolean hasAddressCity() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'addressCity' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder clearAddressCity() {
      addressCity = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'addressPostalCode' field.
      * @return The value.
      */
    public java.lang.String getAddressPostalCode() {
      return addressPostalCode;
    }


    /**
      * Sets the value of the 'addressPostalCode' field.
      * @param value The value of 'addressPostalCode'.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder setAddressPostalCode(java.lang.String value) {
      validate(fields()[5], value);
      this.addressPostalCode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'addressPostalCode' field has been set.
      * @return True if the 'addressPostalCode' field has been set, false otherwise.
      */
    public boolean hasAddressPostalCode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'addressPostalCode' field.
      * @return This builder.
      */
    public com.multiwarehouse.app.kafka.order.avro.model.WarehouseCreateAvroModel.Builder clearAddressPostalCode() {
      addressPostalCode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public WarehouseCreateAvroModel build() {
      try {
        WarehouseCreateAvroModel record = new WarehouseCreateAvroModel();
        record.id = fieldSetFlags()[0] ? this.id : (java.util.UUID) defaultValue(fields()[0]);
        record.warehouseId = fieldSetFlags()[1] ? this.warehouseId : (java.util.UUID) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.String) defaultValue(fields()[2]);
        record.addressStreet = fieldSetFlags()[3] ? this.addressStreet : (java.lang.String) defaultValue(fields()[3]);
        record.addressCity = fieldSetFlags()[4] ? this.addressCity : (java.lang.String) defaultValue(fields()[4]);
        record.addressPostalCode = fieldSetFlags()[5] ? this.addressPostalCode : (java.lang.String) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<WarehouseCreateAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<WarehouseCreateAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<WarehouseCreateAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<WarehouseCreateAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










