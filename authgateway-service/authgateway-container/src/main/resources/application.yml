server:
  port: 8190

logging:
  level:
    com.multiwarehouse.app: DEBUG

authgateway-service:
  user-change-topic-name: user-change

spring:
  application:
    name: multiwarehouse
  datasource:
    url: jdbc:postgresql://localhost:5432/multiwarehouse?currentSchema=auth&binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: none
  sql:
    init:
      platform: postgres
      mode: always
      schema-locations: classpath:init-schema.sql
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedHeaders: "*"
            allowedMethods: "*"
#            allowedOrigins: "http://localhost:3000"
      routes:
        - id: auth-service
          uri: http://localhost:8182
          predicates:
            - Path=/auth/**

        - id: user-service
          uri: http://localhost:8182
          predicates:
            - Path=/me
            - Method= GET, PUT
          filters:
            - MeAuthorizationFilter

        - id: warehouse-service
          uri: http://localhost:8181
          predicates:
            - Path=/warehouses/**
            - Method= GET
          filters:
            - AdminAuthorizationFilter

        - id: warehouse-service
          uri: http://localhost:8181
          predicates:
            - Path=/warehouses/**
            - Method= POST, PUT, DELETE
          filters:
            - SuperAdminAuthorizationFilter

        - id: user-service
          uri: http://localhost:8182
          predicates:
            - Path=/users/**
            - Method= GET, PUT
          filters:
            - UserAuthorizationFilter

        - id: user-service
          uri: http://localhost:8182
          predicates:
            - Path=/users/**
            - Method= POST, DELETE
          filters:
            - SuperAdminAuthorizationFilter

        - id: product-service
          uri: http://localhost:8184
          predicates:
            - Path=/product_categories/**, /products/**
            - Method= GET

        - id: product-service
          uri: http://localhost:8184
          predicates:
            - Path=/product_categories/**, /products/**
            - Method= POST, PUT, DELETE
          filters:
            - SuperAdminAuthorizationFilter

        - id: inventory-service
          uri: http://localhost:8188
          predicates:
            - Path=/inventories/by_warehouse/**, /stock_mutations/by_warehouse/**
            - Method= GET, POST
          filters:
            - WarehouseIdPathVariableFilter
            - WarehouseAdminAuthorizationFilter

        - id: inventory-service
          uri: http://localhost:8188
          predicates:
            - Path=/stock_mutations/**
            - Method= PUT
          filters:
            - AdminAuthorizationFilter

kafka-config:
  bootstrap-servers: localhost:19092,localhost:29092,localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  num-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.StringSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: snappy
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5

kafka-consumer-config:
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  user-change-consumer-group-id: authgateway-user-change-consumer
  auto-offset-reset: earliest
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true
  batch-listener: true
  auto-startup: true
  concurrency-level: 3
  session-timeout-ms: 10000
  heartbeat-interval-ms: 3000
  max-poll-interval-ms: 300000
  max-poll-records: 500
  max-partition-fetch-bytes-default: 1048576
  max-partition-fetch-bytes-boost-factor: 1
  poll-timeout-ms: 150